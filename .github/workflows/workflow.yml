name: Build unity plugins

on:
  workflow_dispatch:
  push:
    paths:
      - 'unity/package.json'

env:
  UHR_BUILD_TYPE: Release

jobs:

  build-plugin-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      
      # Use VS developer command prompt so nmake is available
      - uses: ilammy/msvc-dev-cmd@v1

      # Download the jom build tool and add .jom/ to the PATH
      # so that subsequent steps will find jom.exe
      - name: Install jom
        run: |
          ./scripts/util/fetch_jom.sh
          echo "$PWD/.jom" >> $GITHUB_PATH

      - name: Build windows x86_64
        run: scripts/build_windows.sh

      - name: Test windows x86_64
        run: scripts/test.sh

      - uses: actions/upload-artifact@v2
        with:
          name: artifact-windows
          path: unity/Assets
          retention-days: 1

  build-plugin-mac:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      
      - name: Build mac fat
        run: scripts/build_mac.sh
      
      - uses: actions/upload-artifact@v2
        with:
          name: artifact-mac
          path: unity/Assets
          retention-days: 1

  build-plugin-linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2

      - name: Build linux x86_64
        run: scripts/build_linux.sh

      - name: Test linux x86_64
        run: scripts/test.sh

      - uses: actions/upload-artifact@v2
        with:
          name: artifact-linux
          path: unity/Assets
          retention-days: 1

  build-plugin-android:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21d
      
      - name: Build android armeabi-v7a
        env:
          UHR_ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: scripts/build_android.sh

      - uses: actions/upload-artifact@v2
        with:
          name: artifact-android
          path: unity/Assets
          retention-days: 1

  build-plugin-ios:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      
      - name: Build ios fat
        run: scripts/build_ios.sh
      
      - uses: actions/upload-artifact@v2
        with:
          name: artifact-ios
          path: unity/Assets
          retention-days: 1

  package-plugin:
    runs-on: ubuntu-latest
    needs: [build-plugin-windows, build-plugin-mac, build-plugin-linux, build-plugin-android, build-plugin-ios]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: artifact-windows
          path: unity/Assets

      - uses: actions/download-artifact@v2
        with:
          name: artifact-mac
          path: unity/Assets

      - uses: actions/download-artifact@v2
        with:
          name: artifact-linux
          path: unity/Assets

      - uses: actions/download-artifact@v2
        with:
          name: artifact-android
          path: unity/Assets

      - uses: actions/download-artifact@v2
        with:
          name: artifact-ios
          path: unity/Assets

      - uses: actions/setup-node@v2
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'

      - run: npm publish
        working-directory: unity
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
